
# Find my projects
p() {
	if [ "$1" = "-h" ]; then
		echo "Usage: p [-a, --all] PROJECTNAME"
	else
		eval "cd $(~/.bash/completion_scripts/project $1)"
	fi
}

# Simple history find
hf() {
  grep "$@" ~/.bash_history
}


##### Shell and dotfile management functions

reload_shell() {
	if command -v lsof >/dev/null; then
		shell=$(lsof -p $$ | awk '(NR==2) {print $1}')
		file=~/.${shell}rc
		echo "Sourcing ${file}..."
		source $file
		echo "Done."
	else
		echo "Could not determine shell to reload"
	fi
}

# Make symlink dotfiles in HOME to the regular files in Dropbox.
# Just defer to the script that does it - it is standalone to allow
# linking without sourcing this function first.
link_dotfiles() {
	dropbox_dir=$HOME/Dropbox
	if [ -d $dropbox_dir ]; then
		link_script=$dropbox_dir/dotfiles/link_dotfiles
		if [ -f $link_script ]; then
			ruby $link_script
		else
			echo "$link_script does not exist or is not a regular file"
		fi
	else
		echo "$dropbox_dir does not exist or is not a directory - is Dropbox set up?"
	fi
}

dotfiles_project() {
	mate $HOME/Dropbox/dotfiles
}
